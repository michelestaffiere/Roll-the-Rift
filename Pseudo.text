API stuff.
1)  set states for champion and item data

const [champions,setChampions] = useState([])
const [items,setItems] = useState([])



2) grab the most up to date data from data-dragon
const version = fetch(data-dragon-version[0]) 

3)  grab champion data from the most recent patch version. 
const championData = fetch(data-dragon + version + champions)

if response.ok(){logic for error handling and successful grab}

setChampions(championData)

4)  grab item data from most recent patch version.
 const itemData = fetch(data-dragon + version + items)
 if response.ok(){logic for error handling and successful grab}

 setItems(itemData)


5) export the states for passing them off to the randomizer component 

export {items, champions}

-----------------------------------------

//randomized component//

1) filter the champion data object and aquire the data needed (champion img & name);

randomIndexSelector = (array) =>{
    > random number generated based on array length
    > return the random number
}

randomChampionSelector = () =>{
    > let x = randomIndexSelector(championArray);
    > let championName = championArray[x]... (where the name is held)
    > let championImg = championArray[x]... (where the img is held)
    > let championData = [championName,championImg]

    > return championData
};

randomItemSelector = () =>{
    > let counter = 0 
    > let items = []
    while counter < 6
    for item in item in items{
        let x =  > let x = randomIndexSelector(items);
      if items[] does not contain x...(where the name is held){
            let item = {
                name:where name is held in items object from api,
                img: where img is held in items object from api,
                stats: where stats is held in items object from api,
                gold: where gold cost is held in items object from api
            }
            items.push(item);
      } 
        counter = counter + 1;
    }

    > return items
};

button to handle the calling of the two randomSelector functions

//proposed JSX layout//

<>
button 
h3 prop{championData[0]}
img prop{championData[1]}
{ js to handle a map() loop to append items to the page from the returned items array of objects}
</>




